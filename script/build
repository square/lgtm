#!/usr/bin/env node

'use strict';

let rollup = require('rollup').rollup;
let babel = require('rollup-plugin-babel');
let filesize = require('file-size');
let gzipSize = require('gzip-size').sync;
let readFileSync = require('fs').readFileSync;
let minify = require('uglify-js').minify;

rollup({
  input: 'src/lgtm.js',
  plugins: [
    babel({
      babelrc: false,
      presets: [
        [
          'env',
          {
            targets: ['last 2 versions', 'ie 11'],
            modules: false
          }
        ]
      ]
    })
  ]
})
  .then(bundle => {
    return Promise.all([
      bundle.write({
        file: 'dist/lgtm.js',
        format: 'umd',
        name: 'LGTM',
        sourcemap: true
      }),
      bundle.write({
        file: 'dist/lgtm.mjs',
        format: 'es',
        sourcemap: true
      })
    ]);
  })
  .then(() => {
    printFileInfo('dist/lgtm.js');
  })
  .catch(err => console.error(err.stack));

function printFileInfo(path) {
  let code = readFileSync(path);
  let minified = minify(code.toString('utf8'));

  console.log(
    `â†’ ${path} (raw: ${filesize(code.length).human('si')} / min: ${filesize(
      minified.code.length
    ).human('si')} ` +
      `/ min+gzip: ${filesize(gzipSize(minified.code)).human('si')})`
  );
}
